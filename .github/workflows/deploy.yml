---
name: Deployment
on:
  repository_dispatch:
    types:
      - deploy-command

jobs:
  getArgs:
    runs-on: [self-hosted, jamaica]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get the tags
        run: |
          PLAYBOOK="${{ github.event.client_payload.slash_command.args.named.playbook }}"
          TAGS="${{ github.event.client_payload.slash_command.args.named.tags }}"
          LIMIT="${{ github.event.client_payload.slash_command.args.named.limit }}"

          if [[ -z "$LIMIT" ]]; then
            LIMIT=[\"*\"];
          else
            LIMIT=[\"$LIMIT\"]
          fi

          echo "playbook=${PLAYBOOK}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "limit=${LIMIT}" >> $GITHUB_OUTPUT
        id: args

  deploy:
    needs: getArgs
    runs-on: [self-hosted, jamaica]
    name: Deploy using Ansible
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Ansible
        run: |
          echo "Setting up non-interactive sudo..."
          echo 'Defaults        !tty_tickets' | sudo tee /etc/sudoers.d/disable-tty
          sudo apt-get update
          sudo apt-get install -y ansible
          ansible-galaxy collection install -r collections/requirements.yml

      - name: Apply Ansible Playbook
        run: |
          ansible-playbook -i inventory.yml ${{ needs.getArgs.outputs.playbook }} -l ${{ needs.getArgs.outputs.limit }} -t ${{ needs.getArgs.outputs.tags }}
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
          ANSIBLE_CONFIG: ansible.cfg
